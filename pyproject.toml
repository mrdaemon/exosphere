[project]
name = "exosphere"
version = "0.1.0"
description = "The highest level infrastructure tool"
readme = "README.md"
authors = [
    { name = "Alexandre Gauthier", email = "alex@underwares.org" }
]
requires-python = ">=3.11"
dependencies = [
    "click-shell[readline]>=2.1 ; sys_platform != 'win32'",
    "click-shell>=2.1 ; sys_platform == 'win32'",
    "fabric>=3.2.2",
    "typer>=0.15.2",
    "textual>=3.2.0",
    "pyyaml>=6.0.2",
    "textual-serve>=1.1.2",
]

[dependency-groups]
dev = [
    "fabric[pytest]>=3.2.2",
    "poethepoet>=0.33.1",
    "pyright>=1.1.400",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-json-ctrf>=0.3.5",
    "pytest-mock>=3.14.0",
    "ruff>=0.11.5",
    "textual-dev>=1.7.0",
]

[project.scripts]
exosphere = "exosphere.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.poe.tasks]
lint = "ruff check src tests"
isort = "ruff check --select I --fix src tests"
isort-check = "ruff check --select I src tests"
typecheck = "pyright src tests"
ruff-format = "ruff format src tests"
ruff-format-check = "ruff format --check src tests"
format = ['ruff-format', 'isort']
format-check = ['ruff-format-check', 'isort-check']
check = ['format-check', 'lint', 'typecheck']
test = "pytest -v --ctrf .tests_report.json"
coverage = "pytest --cov-report term-missing --cov-report html --cov=src tests/"
